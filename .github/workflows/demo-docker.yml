name: demo-with-docker

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
  push:
    branches:
      - "main"
      - "rebase-upstream"
  schedule:
    - cron: "0 0 */1 * *"

jobs:
  run-all-examples:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Manually update GitHub's containerd
        run: |
          wget https://github.com/containerd/containerd/releases/download/v1.7.5/containerd-1.7.5-linux-amd64.tar.gz
          sudo tar Czxvf /usr containerd-1.7.5-linux-amd64.tar.gz
          sudo systemctl restart containerd

      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v2
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Install and run MySQL
        run: |
          sudo apt-get update
          sudo apt-get -y install mysql-server libmysqlclient-dev curl
          sudo service mysql start
          mysql -e "PURGE BINARY LOGS BEFORE now();" -uroot -proot

      - name: Install apt-get packages
        run: |
          sudo ACCEPT_EULA=Y apt-get update
          sudo ACCEPT_EULA=Y apt-get upgrade
          sudo apt-get install wget git curl software-properties-common build-essential libdbus-1-dev \
            pkg-config libseccomp-dev protobuf-compiler libprotobuf-dev

      - name: Install WasmEdge lib
        run: |
          curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- --version=0.13.5 --plugins wasi_nn-pytorch
          sudo -E sh -c 'echo "$HOME/.wasmedge/lib" > /etc/ld.so.conf.d/libwasmedge.conf'
          sudo ldconfig

      - name: Build and install WasmEdge shim
        run: |
          FEATURES_wasmedge="--no-default-features --features wasi_nn" LN="sudo ln -sf" INSTALL="sudo install" make install-wasmedge

      - name: Run basic test case
        run: docker run --rm --runtime=io.containerd.wasmedge.v1 --platform wasip1/wasm ghcr.io/captainvincent/runwasi-demo:wasi-demo-app echo 'hello'

      # - name: Run hyper client example
      #   run: docker run --rm --runtime=io.containerd.wasmedge.v1 --platform wasip1/wasm ghcr.io/second-state/runwasi-demo:wasmedge_hyper_client

      - name: Run hyper server example
        run: |
          docker run --name server -p 8080:8080 -d --rm --runtime=io.containerd.wasmedge.v1 \
            --platform wasip1/wasm ghcr.io/captainvincent/runwasi-demo:wasmedge_hyper_server
          sleep 3
          curl http://localhost:8080/echo -X POST -d "WasmEdge"
          docker stop server

      # - name: Run reqwest demo example
      #   run: docker run --rm --runtime=io.containerd.wasmedge.v1 --platform wasip1/wasm ghcr.io/second-state/runwasi-demo:wasmedge_reqwest_demo

      - name: Run rootfs mounts example
        run: |
          docker run --rm --runtime=io.containerd.wasmedge.v1 --platform wasip1/wasm \
            -v $PWD/demo/rootfs-mounts:/mnt \
            ghcr.io/captainvincent/runwasi-demo:wasmedge-rootfs-mounts-demo

      - name: Inject WASI-NN PyTorch plugin and dependencies
        run: |
          curl -s -L -O --remote-name-all https://download.pytorch.org/libtorch/lts/1.8/cpu/libtorch-cxx11-abi-shared-with-deps-1.8.2%2Bcpu.zip
          unzip -q "libtorch-cxx11-abi-shared-with-deps-1.8.2%2Bcpu.zip"
          sudo cp ./libtorch/lib/*.so* /usr/lib/
          ./demo/utils/inject_plugin.sh $HOME/.wasmedge/plugin/libwasmedgePluginWasiNN.so /opt/containerd/lib

      - name: Run WASI-NN PyTorch example
        run: |
          docker run --rm --runtime=io.containerd.wasmedge.v1 --platform wasip1/wasm \
            -v /opt/containerd/lib:/opt/containerd/lib \
            -v $PWD/demo/wasinn/pytorch-mobilenet-image:/resource \
            --env WASMEDGE_PLUGIN_PATH=/opt/containerd/lib \
            ghcr.io/captainvincent/runwasi-demo:wasmedge-wasinn-example-mobilenet-image \
            resource/mobilenet.pt /resource/input.jpg
