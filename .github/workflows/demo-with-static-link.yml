name: examples

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
  push:
    branches: [static-link-wasmedge]

jobs:
  run-all-examples:

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install apt-get packages
      run: |
        sudo ACCEPT_EULA=Y apt-get update
        sudo ACCEPT_EULA=Y apt-get upgrade
        sudo apt-get install wget git curl software-properties-common build-essential libdbus-1-dev pkg-config libseccomp-dev llvm-amdgpu

    - name: Manually update GitHub's containerd
      run: |
        wget https://github.com/containerd/containerd/releases/download/v1.7.5/containerd-1.7.5-linux-amd64.tar.gz
        sudo tar Czxvf /usr containerd-1.7.5-linux-amd64.tar.gz
        sudo systemctl restart containerd

    - name: Install WasmEdge WASINN plugin dependencies
      run: |
        sudo ctr content fetch docker.io/vincent2nd/runwasi-wasinn:latest
        sudo ctr install docker.io/vincent2nd/runwasi-wasinn:latest -l -r

    - name: Build test WasmEdge lib and plugins
      run: |
        git clone https://github.com/CaptainVincent/WasmEdge.git
        cd WasmEdge
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DWASMEDGE_BUILD_AOT_RUNTIME=ON -DWASMEDGE_PLUGIN_WASI_NN_BACKEND="PyTorch" .. && make -j

    - name: Build and install WasmEdge shim
      run: |
        echo "WASMEDGE_BUILD_DIR=${{ github.workspace }}/WasmEdge/build" >> $GITHUB_ENV
        rustup target add wasm32-wasi
        make build
        sudo make install

    - name: Build all test and demo OCI images
      run: |
        make load_demo

    - name: Run WASI-NN PyTorch demo conatiner
      run: |
        sudo ctr run --rm --env WASMEDGE_PLUGIN_PATH=/opt/containerd/lib \
          --mount type=bind,src=$PWD/demo/wasinn/pytorch-mobilenet-image,dst=/resource,options=rbind:ro \
          --mount type=bind,src=/opt/containerd/lib,dst=/opt/containerd/lib,options=bind:ro \
          --runtime=io.containerd.wasmedge.v1 \
          ghcr.io/containerd/runwasi/wasmedge-wasinn-example-mobilenet-image:latest \
          testwasinn /app.wasm /resource/mobilenet.pt /resource/input.jpg
